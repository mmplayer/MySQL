################################################################################
# This test case checks that empty groups appearing on slave preserve GTID
# properties. 
# Such group can appear on slave as a result of
#
# a. ineffective binary logging (no events in row format)
# b. filtered out query
# c. processing of a master's empty group 
#
################################################################################
--source include/master-slave.inc
--source include/not_embedded.inc
--source include/have_binlog_format_mixed.inc
--source include/have_gtid.inc

# prepare for a.
--connection slave
SET @save.binlog_format= @@global.binlog_format;
SET @@global.binlog_format= row;
source include/restart_slave_sql.inc;

--connection master
SET @save.binlog_format= @@session.binlog_format;
SET @@session.binlog_format= statement;
CREATE TABLE t1(id INTEGER) ENGINE= Innodb /* group one */;
UPDATE t1 SET id= 1 WHERE id = 0          /* group two */;

# load for b.
CREATE TABLE t_ignore(id INTEGER) ENGINE= Innodb /* group three */;

--sync_slave_with_master

--echo must be *three* groups logged, where the two last empty:
--let $keep_gtid_events= 1
source include/show_binlog_events.inc;

# todo: add c.
# --connection slave
# set @@session.gtid_next='`last_master s_id: last_master seqno + 1`;
# begin;
# commit;


#
# Testing of ROLLBACK as explicit so due to an error does 
# not log anything.
#

--connection master
FLUSH LOGS;
--error ER_BAD_TABLE_ERROR
DROP TABLE t2;
--error ER_WRONG_VALUE_COUNT_ON_ROW
INSERT INTO t1 VALUES (1, 1); 
BEGIN;
INSERT INTO t1 VALUES (2);
ROLLBACK;

--echo *** must be empty log ***

let $binlog_file= query_get_value(SHOW MASTER STATUS, File, 1);
source include/show_binlog_events.inc;

# cleanup

--connection master
DROP TABLE t1;
DROP TABLE t_ignore;

--sync_slave_with_master
SET @@global.binlog_format= @save.binlog_format;

--source include/rpl_end.inc
